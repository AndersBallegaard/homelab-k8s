{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to my homelab This is still very much under construction","title":"Home"},{"location":"#welcome-to-my-homelab","text":"This is still very much under construction","title":"Welcome to my homelab"},{"location":"apps/apps/","text":"APPS This section describes the apps running on the cluster This page is autogenerated, do not edit it directly see this for more information","title":"Apps"},{"location":"apps/apps/#apps","text":"This section describes the apps running on the cluster This page is autogenerated, do not edit it directly see this for more information","title":"APPS"},{"location":"info/info/","text":"About this documentation Documentation in this repository is automaticly put toghther from templates, this is done to have a single source to update if a section is needed multiple places like a doc page, and a readme page for a part of subdirectory How to add to this documentation Create new section First create a directory for the section, and a jinja template file # Make directory and empty jinja file mkdir -p docs/example touch docs/example/example.jinja # All files should include footer containing warning not to edit md files directly echo '{% include \"docs/footer.section\" %}' >> docs/example/example.jinja This page should be added to the nav section of mkdocs.yaml, see the file or mkdocs documentation for how to do this Add page to existing section Create a new file inside the directory you want to add to. The file should follow the 'relevant_name.section' naming scheme. Treat this file as a markdown file, and add the content you want Once you are ready to include it in the documentation add a line to the directorys .jinja file, the line should look something like below {% include \"example/world_domination.section\" %} Note, this should always be placed above the footer inclusion Documentation deployment Deployment to github pages is not automatic, in order to deploy, follow this process # The following commands are all from the root of the project # Build documentation ./build_docs.sh # Source venv source .venv/bin/activate # Run locally to validate changes before deploying mkdocs serve # Use mkdocs github pages feature to deploy mkdocs gh-deploy This page is autogenerated, do not edit it directly see this for more information","title":"Information"},{"location":"info/info/#about-this-documentation","text":"Documentation in this repository is automaticly put toghther from templates, this is done to have a single source to update if a section is needed multiple places like a doc page, and a readme page for a part of subdirectory","title":"About this documentation"},{"location":"info/info/#how-to-add-to-this-documentation","text":"","title":"How to add to this documentation"},{"location":"info/info/#create-new-section","text":"First create a directory for the section, and a jinja template file # Make directory and empty jinja file mkdir -p docs/example touch docs/example/example.jinja # All files should include footer containing warning not to edit md files directly echo '{% include \"docs/footer.section\" %}' >> docs/example/example.jinja This page should be added to the nav section of mkdocs.yaml, see the file or mkdocs documentation for how to do this","title":"Create new section"},{"location":"info/info/#add-page-to-existing-section","text":"Create a new file inside the directory you want to add to. The file should follow the 'relevant_name.section' naming scheme. Treat this file as a markdown file, and add the content you want Once you are ready to include it in the documentation add a line to the directorys .jinja file, the line should look something like below {% include \"example/world_domination.section\" %} Note, this should always be placed above the footer inclusion","title":"Add page to existing section"},{"location":"info/info/#documentation-deployment","text":"Deployment to github pages is not automatic, in order to deploy, follow this process # The following commands are all from the root of the project # Build documentation ./build_docs.sh # Source venv source .venv/bin/activate # Run locally to validate changes before deploying mkdocs serve # Use mkdocs github pages feature to deploy mkdocs gh-deploy This page is autogenerated, do not edit it directly see this for more information","title":"Documentation deployment"},{"location":"infra/infra/","text":"Infra This section describes the infrastructure side of the cluster This page is autogenerated, do not edit it directly see this for more information","title":"Infrastructure"},{"location":"infra/infra/#infra","text":"This section describes the infrastructure side of the cluster This page is autogenerated, do not edit it directly see this for more information","title":"Infra"},{"location":"troubleshooting/troubleshooting/","text":"Troubleshooting Tips and ticks for the cluster This page is autogenerated, do not edit it directly see this for more information","title":"Troubleshooting"},{"location":"troubleshooting/troubleshooting/#troubleshooting","text":"Tips and ticks for the cluster This page is autogenerated, do not edit it directly see this for more information","title":"Troubleshooting"}]}